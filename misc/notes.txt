pergunta

375 50387947,2674303.0,inter micro-service request responds with Forbidden status in spring cloud application,2018-05-17T09:28:45,<java><spring-boot><microservices><spring-cloud><spring-security-oauth2>,1,263,1,,0,"<p>I am investigating microservice architecture. I chose the spring cloud framework.</p>&#xA;&#xA;<p>My application shema looks like this:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/yvQ9E.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/yvQ9E.jpg"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Also I have discovery server eureka but I decided to skip on the picture to simplify it.</p>&#xA;&#xA;<p>Full source code of example you can find on githib: <a href=""https://github.com/gredwhite/spring-cloud"" rel=""nofollow noreferrer"">https://github.com/gredwhite/spring-cloud</a></p>&#xA;&#xA;<h2>Problem explanation:</h2>&#xA;&#xA;<p><strong>hello world service:</strong></p>&#xA;&#xA;<pre><code>@GetMapping(""/helloWorld"")&#xA;@HystrixCommand(fallbackMethod = ""reliable"")&#xA;public String hello() {&#xA;    return this.restTemplate.getForObject(""http://hello-service/hello?name=World"", String.class);&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>hello service:</strong></p>&#xA;&#xA;<pre><code>@GetMapping(""/hello"")&#xA;public String hello(@RequestParam(""name"") String name) throws UnknownHostException, InterruptedException {           &#xA;     return ""Hello "" + name + ""!"";&#xA; }&#xA;</code></pre>&#xA;&#xA;<p>When I started the <code>hello service</code> and try to access <code>localhost:8082/h/hello?name=Vasya</code> (<code>/h</code> - context path) - request happens successfully and I see <code>Hello Vasya</code> mesage in the response. <strong>I need to say that authentication is disabled for that service.</strong></p>&#xA;&#xA;<p><code>hello world service</code> has <code>index.html</code> page and when I try to acces it - auth flow happens successfully and eventually this application log in successfully. Then I try to execute method <code>/hello</code> from the <code>hello world service</code> and I see response:</p>&#xA;&#xA;<pre><code>{""timestamp"":""2018-05-17T08:53:04.623+0000"",""status"":403,""error"":""Forbidden"",""message"":""Forbidden"",""path"":""/hw/helloWorld""}&#xA;</code></pre>&#xA;&#xA;<h2>Oauth2 configuration:</h2>&#xA;&#xA;<p><strong>hello world service</strong></p>&#xA;&#xA;<pre><code>@SpringBootApplication&#xA;@EnableEurekaClient&#xA;@RibbonClient(name = ""say-hello"")&#xA;@EnableAutoConfiguration&#xA;@EnableOAuth2Sso&#xA;public class HelloWorldStarter {&#xA;&#xA;    public static void main(String[] args) {&#xA;        SpringApplication.run(HelloWorldStarter.class, args);&#xA;    }&#xA;&#xA;&#xA;    @RestController&#xA;    @EnableDiscoveryClient&#xA;    @EnableCircuitBreaker&#xA;    public static class HelloWorldController {&#xA;        @Autowired&#xA;        private RestTemplate restTemplate;&#xA;        @Autowired&#xA;        private DiscoveryClient discoveryClient;&#xA;&#xA;        @GetMapping(""/helloWorld"")&#xA;        @HystrixCommand(fallbackMethod = ""reliable"")&#xA;        public String hello() {           &#xA;            return this.restTemplate.getForObject(""http://hello-service/hello?name=World"", String.class);&#xA;        }&#xA;&#xA;        public String reliable() {&#xA;            return ""Could not get response from service"";&#xA;        }&#xA;    }&#xA;&#xA;    @org.springframework.context.annotation.Configuration&#xA;    public static class Configuration {&#xA;        @Bean&#xA;        @LoadBalanced&#xA;        RestTemplate restTemplate() {&#xA;            return new RestTemplate();&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><em>application.yml:</em></p>&#xA;&#xA;<pre><code>spring:&#xA;  application:&#xA;    name: hello-world-service&#xA;server:&#xA;  port: 8081&#xA;  servlet:&#xA;    context-path: /hw&#xA;eureka:&#xA;  client:&#xA;    serviceUrl:&#xA;      defaultZone: http://localhost:8761/eureka&#xA;  instance:&#xA;    preferIpAddress: true&#xA;&#xA;security:&#xA;  oauth2:&#xA;    client:&#xA;      client-id: acme&#xA;      client-secret: acmesecret&#xA;      access-token-uri: http://localhost:8080/oauth/token&#xA;      user-authorization-uri: http://localhost:8080/oauth/authorize&#xA;    resource:&#xA;      user-info-uri: http://localhost:8080/me&#xA;&#xA;logging:&#xA;  level:&#xA;    org.springframework.security: DEBUG&#xA;    org.springframework.web: DEBUG&#xA;</code></pre>&#xA;&#xA;<h2>Questions</h2>&#xA;&#xA;<ol>&#xA;<li>How can I fix this problem?  </li>&#xA;<li>After previous point fix I want to know how to execute authorized request to that service. In other words I want to enable oauth 2 authorization on hello service and have possibility to make request from the <code>hello world service</code></li>&#xA;</ol>&#xA;"

resposta

2595 50392341,50387947,5668795,2018-05-17T13:10:55,"<p>I think you use very strange approach to solve your problem. </p>&#xA;&#xA;<p>I suggest you the following solution:</p>&#xA;&#xA;<ol>&#xA;<li>Create FeignClient service. </li>&#xA;</ol>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>@FeignClient(name = ""hello-service"", url = ""http://hello-service"")&#xD;&#xA;public interface HelloService {&#xD;&#xA;&#xD;&#xA;    @RequestMapping(method = RequestMethod.GET, value = ""/hello"")&#xD;&#xA;    String hello(@PathVariable(""name"") String name);&#xD;&#xA;&#xD;&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<ol start=""2"">&#xA;<li>Add oauth2FeignRequestInterceptor into SpringBoot Application class</li>&#xA;</ol>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>@Bean&#xD;&#xA;    public RequestInterceptor oauth2FeignRequestInterceptor() {&#xD;&#xA;        return new RequestInterceptor() {&#xD;&#xA;            @Override&#xD;&#xA;            public void apply(RequestTemplate requestTemplate) {&#xD;&#xA;                OAuth2AuthenticationDetails details = (OAuth2AuthenticationDetails) SecurityContextHolder.getContext().getAuthentication().getDetails();&#xD;&#xA;&#xD;&#xA;                requestTemplate.header(""Authorization"", ""bearer "" + details.getTokenValue());&#xD;&#xA;            }&#xD;&#xA;        };&#xD;&#xA;    }</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<ol start=""3"">&#xA;<li>Add several annotation into your SpringBoot Application class</li>&#xA;</ol>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>@EnableOAuth2Client&#xD;&#xA;@EnableGlobalMethodSecurity(prePostEnabled = true)&#xD;&#xA;@EnableFeignClients&#xD;&#xA;public class HelloWorldStarter</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>That's all hope it helps. </p>&#xA;"


pergunta 1551

44965110,8269045.0,How to call other REST APIs from your node micro-service and send the result as a response?,2017-07-07T07:35:37,<node.js><backend><microservices><es6-promise><request-promise>,2,1166,0,,0,"<p>I am currently trying to implement a BFF (backend for front end architecture).</p>&#xA;&#xA;<p>Using <code>request-promise</code> library I can successfully hit the other microservice but not able to return the result as a response from BFF microservice.</p>&#xA;&#xA;<p>Each time it is returning this result <code>Promise { pending }</code> pending state, could somebody please help me out on this?</p>&#xA;&#xA;<p>My main issue is to know how to receive data into BFF microservice from the other microservice that we are hitting and returning the result from microservice which is hitting other one.</p>&#xA;&#xA;<p>Or if somebody could help me to let know how to access the result from inside <code>.then</code> of any promise?</p>&#xA;&#xA;<p>The flow is like this:</p>&#xA;&#xA;<pre><code>client(ios/android)===(sends request)==&gt;BFF Microservice==&gt;BP microservice&#xA;</code></pre>&#xA;&#xA;<p>(BFF Microservice handles the request and returns the response on the basis of result received from other microservice)</p>&#xA;&#xA;<p>Microservice code which is calling another microservice:</p>&#xA;&#xA;<pre><code>import yagmodel from '../../lib/models/yag-model'&#xA;import {errorsList} from '../../lib/errors/errorsList'&#xA;import request from 'request-promise'&#xA;import config from 'config'&#xA;&#xA;//template below to call the REST APIs of other microservices.&#xA;&#xA;export async function getAllBP (req,res) {&#xA;    let yagresponse// this varaible is defined to get data from inside(rs.then )&#xA;&#xA;    const username= req.swagger.params.username.value&#xA;    const authheader= req.swagger.params.Authorization.value&#xA;    console.log(""Authorization:""+authheader)&#xA;&#xA;    let rs= await yagmodel.bp(username,authheader)&#xA;    console.log(rs)&#xA;&#xA;    rs.then((response)=&gt;{&#xA;        // console.log(response.body)&#xA;        yagresponse=response.body&#xA;        //console.log(rsp)&#xA;    }).catch((err)=&gt;{&#xA;        console.log(err)&#xA;        console.log('errorstatuscode:'+err.statusCode)&#xA;    })&#xA;&#xA;    res.status(200).send(yagresponse) &#xA;}&#xA;</code></pre>&#xA;&#xA;<p><code>yag-model.js</code> code:</p>&#xA;&#xA;<pre><code>import {errorsList} from '../../lib/errors/errorsList'&#xA;import request from 'request-promise'&#xA;&#xA;module.exports.bp = async function getBP(username,authheader){&#xA;    const options={&#xA;        uri: `http://localhost:4000/Health/BP/`+username,&#xA;        json: true,&#xA;        resolveWithFullResponse: true,&#xA;        headers: {&#xA;            'Content-Type': 'application/json; charset=utf-8',&#xA;            'Accept': 'application/json; charset=utf-8',&#xA;            'Authorization':authheader&#xA;        },&#xA;        method: 'GET'&#xA;    }&#xA;&#xA;    return request(options).then ((response)=&gt;{&#xA;        return response.body        &#xA;    }).catch((err)=&gt;{&#xA;        console.log(err)&#xA;        console.log('errorstatuscode:'+err.statusCode)&#xA;    })&#xA;}&#xA;</code></pre>&#xA;"


resposta 767

44966711,44965110,1463860,2017-07-07T09:01:32,"<p>I think you mix to match await oprators with promises, when you can use only await.</p>&#xA;&#xA;<p>I create simplefied version of your code:</p>&#xA;&#xA;<p>yag-model.js</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>const request = require('request-promise');&#xD;&#xA;&#xD;&#xA;module.exports.bp = async function getBP () {&#xD;&#xA;&#xD;&#xA;    const options = {&#xD;&#xA;&#xD;&#xA;        uri: `https://api.postcodes.io/random/postcodes`,&#xD;&#xA;        json: true,&#xD;&#xA;        resolveWithFullResponse: true,&#xD;&#xA;        method: 'GET'&#xD;&#xA;    };&#xD;&#xA;&#xD;&#xA;    return request(options).then((response) =&gt; {&#xD;&#xA;&#xD;&#xA;        return response.body&#xD;&#xA;&#xD;&#xA;    }).catch((err) =&gt; {&#xD;&#xA;        console.log(err);&#xD;&#xA;        console.log('errorstatuscode:' + err.statusCode)&#xD;&#xA;    })&#xD;&#xA;};</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>and usgae in sample <code>bf.js</code></p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>const yagmodel = require('./yag-model');&#xD;&#xA;&#xD;&#xA;async function getAll(){&#xD;&#xA;    const result = await yagmodel.bp();&#xD;&#xA;    console.log(result);&#xD;&#xA;};&#xD;&#xA;&#xD;&#xA;getAll();</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>And the result is the response on my console.</p>&#xA;&#xA;<pre><code>F:\Projekty\Learn\lear-node&gt;node bf&#xA;{ status: 200,&#xA;result:&#xA; { postcode: 'BH23 5DA',&#xA;   quality: 1,&#xA;   eastings: 420912,&#xA;</code></pre>&#xA;&#xA;<p>I recommend to look on this great resource about asunc functions <a href=""http://exploringjs.com/es2016-es2017/ch_async-functions.html"" rel=""nofollow noreferrer"">http://exploringjs.com/es2016-es2017/ch_async-functions.html</a> from Dr. Axel Rauschmayer</p>&#xA;"


resposta 3176

44967535,44965110,6694629,2017-07-07T09:39:44,"<p>Please don't confuse between promises returned from request-promise and async functions.&#xA;async functions can be <strong>await</strong>ed to get a resolved promise and make your code look good.</p>&#xA;&#xA;<p>I believe in letting people resolve their own problems and just guiding them along the way so just to make sure, aren't you getting the return from the resolved promise in this line of yours:</p>&#xA;&#xA;<pre><code>console.log(rs)&#xA;</code></pre>&#xA;&#xA;<p>Moreover, by looking at your snippet, you're returning a response.body from within request-promise's thenable. You cannot catch any response errors from the response body, right?</p>&#xA;&#xA;<p>I'd strongly suggest following a pattern wherein you'd catch errors (where you should) and display proper messages when you do. Wrapping your await call in a try/catch can help catch uncaught errors from request-promise.</p>&#xA;&#xA;<p>Peace!</p>&#xA;"